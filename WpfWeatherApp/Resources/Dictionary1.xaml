<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" 
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" xmlns:converters="clr-namespace:ZenoWeatherApp.Converters">


    <converters:UnitTypeEqualityComparison x:Key="UnitTypeEqualityComparison"/>

    <LinearGradientBrush x:Key="softFadeBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5" options:Freeze="True">
        <GradientStop Offset="1" Color="{DynamicResource MahApps.Colors.SystemAltMediumLow}" />
        <GradientStop Offset="0" Color="{DynamicResource MahApps.Colors.Accent3}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="softerFadeBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5" options:Freeze="True">
        <GradientStop Offset="1" Color="{DynamicResource MahApps.Colors.SystemAltLow}" />
        <GradientStop Offset="0" Color="{DynamicResource MahApps.Colors.Accent3}" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="sliderThumbBrush" Color="{DynamicResource MahApps.Colors.IdealForeground}" Opacity=".6"
                     options:Freeze="True"/>
    <SolidColorBrush x:Key="sliderThumbBackground" Color="{DynamicResource MahApps.Colors.IdealForeground}" Opacity=".1"
                     options:Freeze="True"/>

    <Style x:Key="pageStyle" TargetType="{x:Type Page}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <ThicknessAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Margin" From="-16,0,0,0" To="0,0,0,0">
                            <ThicknessAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut" />
                            </ThicknessAnimation.EasingFunction>
                        </ThicknessAnimation>
                        <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" From=".5" To="1">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut" />
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="iconPacks:PackIconWeatherIcons" x:Key="weatherIcons">
            <Setter Property="Margin" Value="0,8,0,0"/>
            <Setter Property="Width" Value="36"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        </Style>

        <Style x:Key="LargeTileStyle" TargetType="mah:Tile">
            <Setter Property="Height" Value="128" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
            <Setter Property="TitleFontSize" Value="14" />
            <Setter Property="Width" Value="300" />
        </Style>

        <Style x:Key="SmallTileStyle" TargetType="mah:Tile">
            <Setter Property="Height" Value="128" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
            <Setter Property="TitleFontSize" Value="14" />
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Width" Value="128" />
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

    <!--<Style x:Key="LargeBorderTileStyle" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="128" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextElement.FontSize" Value="14" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Margin" Value="0"/>
    </Style>-->

    <Style x:Key="SmallBorderTileStyle" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="128" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextElement.FontSize" Value="14" />
        <Setter Property="TextElement.FontWeight" Value="SemiBold"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
        <Setter Property="Width" Value="Auto" />
        <Setter Property="MinWidth" Value="128"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="MahApps.Styles.Thumb.Slider2" TargetType="{x:Type Thumb}" BasedOn="{StaticResource MahApps.Styles.Thumb.Slider}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MahApps.Styles.Thumb.SliderBottom" TargetType="{x:Type Thumb}" BasedOn="{StaticResource MahApps.Styles.Thumb.Slider}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <LinearGradientBrush x:Key="tempRangeBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="Red" Offset="0" />
            <GradientStop Color="RoyalBlue" Offset="1"/>
        </LinearGradientBrush>

        <Style x:Key="MahApps.Styles.MetroThumb.RangeSlider.Vertical.Middle2" BasedOn="{StaticResource MahApps.Styles.MetroThumb.RangeSlider.Vertical.Middle}" TargetType="{x:Type mah:MetroThumb}">
            <Setter Property="Background" Value="{DynamicResource sliderThumbBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type mah:MetroThumb}">
                        <Grid Background="{TemplateBinding Background}">
                            <Rectangle Width="Auto" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="MahApps.Styles.RangeSlider.Flat" TargetType="{x:Type mah:RangeSlider}" BasedOn="{StaticResource MahApps.Styles.RangeSlider}">
        <Setter Property="Background" Value="{DynamicResource sliderThumbBackground}"/>
        <Setter Property="mah:SliderHelper.ThumbFillBrush" Value="{DynamicResource sliderThumbBrush}" />
        <Setter Property="mah:SliderHelper.ThumbFillDisabledBrush" Value="{DynamicResource sliderThumbBrush}" />
        <Setter Property="mah:SliderHelper.ThumbFillHoverBrush" Value="{DynamicResource sliderThumbBrush}" />
        <Setter Property="mah:SliderHelper.ThumbFillPressedBrush" Value="{DynamicResource MahApps.Brushes.Gray1}" />
            <Setter Property="mah:SliderHelper.TrackFillBrush" Value="Transparent" />
            <Setter Property="mah:SliderHelper.TrackFillDisabledBrush" Value="Transparent" />
            <Setter Property="mah:SliderHelper.TrackFillHoverBrush" Value="Transparent" />
            <Setter Property="mah:SliderHelper.TrackFillPressedBrush" Value="Transparent" />
            <Setter Property="MinRangeWidth" Value="0"/>
            <Style.Triggers>
                <Trigger Property="mah:RangeSlider.Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type mah:RangeSlider}">

                                <Grid Name="PART_Container" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Background="{TemplateBinding Background}">
                                    <!--<Grid.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mah:RangeSlider}}, Path=UpperValue, StringFormat='{}{0}°', Mode=OneWay}"/>
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mah:RangeSlider}}, Path=LowerValue, StringFormat='{}{0}°', Mode=OneWay}"/>
                                        </StackPanel>
                                    </Grid.ToolTip>-->
                                    <TickBar Name="PART_TopTick" Grid.Column="0" Width="Auto" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Left" ReservedSpace="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" IsHitTestVisible="False"/>
                                    <TickBar Name="PART_BottomTick" Grid.Column="2" Width="Auto" Fill="{TemplateBinding Foreground}" IsSelectionRangeEnabled="{TemplateBinding IsSelectionRangeEnabled}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Placement="Right" ReservedSpace="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" SelectionEnd="{TemplateBinding SelectionEnd}" SelectionStart="{TemplateBinding SelectionStart}" TickFrequency="{TemplateBinding TickFrequency}" Ticks="{TemplateBinding Ticks}" Visibility="Collapsed" IsHitTestVisible="False"/>
                                    <StackPanel Name="PART_RangeSliderContainer" Grid.Column="1" Background="Transparent" Orientation="Vertical" IsHitTestVisible="False">
                                        <RepeatButton Name="PART_RightEdge" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.VerticalTrack}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" />
                                        <mah:MetroThumb Name="PART_RightThumb" Width="Auto" Height="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" BorderThickness="0" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.Slider2}"  Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" Opacity=".8"/>
                                        <mah:MetroThumb Name="PART_MiddleThumb" MinHeight="{TemplateBinding MinRangeWidth}" Cursor="Hand" Style="{DynamicResource MahApps.Styles.MetroThumb.RangeSlider.Vertical.Middle2}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillBrush)}" IsHitTestVisible="False"/>
                                    <mah:MetroThumb Name="PART_LeftThumb" Width="Auto" Height="{DynamicResource MahApps.Sizes.Slider.VerticalThumb.Height}" BorderThickness="0" Cursor="Arrow" Style="{DynamicResource MahApps.Styles.Thumb.SliderBottom}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillBrush)}" Opacity=".8"/>
                                        <RepeatButton Name="PART_LeftEdge" Style="{DynamicResource MahApps.Styles.RepeatButton.Slider.VerticalTrack}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillBrush)}" />
                                    </StackPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="mah:RangeSlider.TickPlacement" Value="TopLeft">
                                        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="mah:RangeSlider.TickPlacement" Value="BottomRight">
                                        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="mah:RangeSlider.TickPlacement" Value="Both">
                                        <Setter TargetName="PART_BottomTick" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="PART_TopTick" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                        <Setter TargetName="PART_LeftEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_LeftThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" Property="Background" />
                                        <Setter TargetName="PART_MiddleThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillHoverBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillHoverBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillHoverBrush)}" Property="Background" />
                                    </Trigger>
                                    <Trigger SourceName="PART_LeftEdge" Property="IsPressed" Value="True">
                                        <Setter TargetName="PART_LeftEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_LeftThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" Property="Background" />
                                        <Setter TargetName="PART_MiddleThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" Property="Background" />
                                    </Trigger>
                                    <Trigger SourceName="PART_RightEdge" Property="IsPressed" Value="True">
                                        <Setter TargetName="PART_LeftEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_LeftThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" Property="Background" />
                                        <Setter TargetName="PART_MiddleThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" Property="Background" />
                                    </Trigger>
                                    <Trigger SourceName="PART_MiddleThumb" Property="Thumb.IsDragging" Value="True">
                                        <Setter TargetName="PART_LeftEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_LeftThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" Property="Background" />
                                        <Setter TargetName="PART_MiddleThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillPressedBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillPressedBrush)}" Property="Background" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="PART_LeftEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_LeftThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" Property="Background" />
                                        <Setter TargetName="PART_MiddleThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackValueFillDisabledBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightEdge" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.TrackFillDisabledBrush)}" Property="Foreground" />
                                        <Setter TargetName="PART_RightThumb" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:SliderHelper.ThumbFillDisabledBrush)}" Property="Background" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    <Style x:Key="MahApps.Styles.ListBoxItem2" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MahApps.Styles.ListBoxItem}">
        <!--<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment , Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="5 0 0 0" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor , AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Name="RootGrid" Background="Transparent" >
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected" Value="True">
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" Property="Background" />

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" Property="Background" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" Property="Background" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="ListBoxItem.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" Property="Background" />

                        </MultiTrigger>
                        <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True">
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" Property="Background" />

                        </Trigger>
                        <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True">
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" Property="Background" />
           
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" Property="Background" />

                            <Setter TargetName="RootGrid" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" Property="Background" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="ListBoxItem.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" Property="Background" />

                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MahApps.Styles.ListBoxItem2}" x:Key="forecastListBoxItem">
        <Setter Property="Width" Value="125"/>
        <Setter Property="Height" Value="125"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
</ResourceDictionary>