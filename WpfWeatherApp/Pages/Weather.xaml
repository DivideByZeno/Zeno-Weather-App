<Page x:Class="ZenoWeatherApp.Pages.Weather"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ZenoWeatherApp.Pages" 
      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" 
      xmlns:model="clr-namespace:ZenoWeatherApp.Model;assembly=ZenoWeatherAppCommon"
      xmlns:viewModel="clr-namespace:ZenoWeatherApp.ViewModel"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
      xmlns:validators="clr-namespace:ZenoWeatherApp.Validators" 
      xmlns:converters="clr-namespace:ZenoWeatherApp.Converters"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Weather"
      xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ZenoWeatherApp;component/Resources/Dictionary1.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <validators:TextQueryValidator x:Key="TextQueryValidator"/>

            <converters:AccuWeatherIconToWeatherIconConverter x:Key="AccuWeatherIconToWeatherIconConverter"/>
            <converters:StringIsEmptyConverter x:Key="StringIsEmptyConverter"/>
            <converters:NullnessConverter x:Key="NullnessConverter"/>

            <Style TargetType="{x:Type Border}"
                x:Key="HelpIcon">
                <Setter Property="Width"
                Value="24" />
                <Setter Property="Height"
                Value="Auto" />
                <Setter Property="CornerRadius"
                Value="0,4,0,4" />
                <Setter Property="Background"
                Value="#999" />
                <Setter Property="VerticalAlignment"
                Value="Stretch" />
                <Setter Property="HorizontalAlignment"
                Value="Stretch" />
                <Setter Property="Cursor"
                Value="Help" />
                <Setter Property="Margin"
                Value="8,0,0,0" />
                <Style.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="TextAlignment"
                        Value="Center" />
                        <Setter Property="VerticalAlignment"
                        Value="Center" />
                        <Setter Property="FontSize"
                        Value="13" />
                        <Setter Property="FontFamily"
                        Value="Arial" />
                        <Setter Property="FontWeight"
                        Value="Bold" />
                        <Setter Property="Foreground"
                        Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                    </Style>
                </Style.Resources>
            </Style>


            <ControlTemplate x:Key="textBoxErrorTemplateAdornRight">
                <DockPanel>
                    <AdornedElementPlaceholder Margin="0,0,0,0" />
                    <Border Width="24"
                    BorderThickness="0"
                    CornerRadius="0"
                    Background="Red"
                    Margin="0,0,0,0"
                    ToolTip="{Binding [0].ErrorContent}"
                    Style="{StaticResource HelpIcon}">
                        <TextBlock Foreground="{DynamicResource MahApps.Brushes.ThemeBackground}"
                           FontSize="20"
                           Text="!" />
                    </Border>
                </DockPanel>
            </ControlTemplate>

            <DataTemplate DataType="{x:Type model:DailyForecast}">
                <DataTemplate.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" To="1" From="0" Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </DataTemplate.Triggers>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <iconPacks:PackIconWeatherIcons 
                            HorizontalAlignment="Center"
                            Kind="{Binding Day.Icon, Mode=OneWay, Converter={StaticResource AccuWeatherIconToWeatherIconConverter}}" 
                            Style="{StaticResource weatherIcons}"/>
                        <StackPanel VerticalAlignment="Bottom">

                            <TextBlock 
                                Text="{Binding Day.IconPhrase, Mode=OneWay}" 
                                TextWrapping="WrapWithOverflow"
                                Style="{StaticResource MahApps.Styles.TextBlock}" 
                                Foreground="{DynamicResource MahApps.Brushes.IdealForeground}" 
                                HorizontalAlignment="Left" 
                                FontSize="13"
                                LineHeight="13"
                                LineStackingStrategy="BlockLineHeight"
                                VerticalAlignment="Center" 
                                Margin="8,0"/>
                            <TextBlock 
                                Style="{StaticResource MahApps.Styles.TextBlock}" 
                                Foreground="{DynamicResource MahApps.Brushes.IdealForeground}" 
                                HorizontalAlignment="Left" 
                                FontSize="13"
                                VerticalAlignment="Center" 
                                Margin="8,0">
                                    <Run Text="{Binding Temperature.Minimum.Value, Mode=OneWay, StringFormat='{}{0}°'}"/>
                                    <Run Text="/"/>
                                    <Run Text="{Binding Temperature.Maximum.Value, Mode=OneWay, StringFormat='{}{0}°'}"/>
                                    <Run Text="{Binding Temperature.Minimum.Unit, Mode=OneWay, StringFormat='{}({0})'}"/>
                            </TextBlock>
                            <Grid>

                                <TextBlock 
                                        Text="{Binding Date.Date, Mode=OneWay, StringFormat='{}{0:ddd}'}" 
                                        Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}" 
                                        Foreground="{DynamicResource MahApps.Brushes.IdealForeground}"
                                        Margin="8,0,8,8" 
                                        VerticalAlignment="Bottom"/>
                                <TextBlock 
                                        Text="{Binding Date.Date, Mode=OneWay, StringFormat='{}{0:MM/dd}'}" 
                                        Style="{StaticResource MahApps.Styles.TextBlock}" 
                                        Foreground="{DynamicResource MahApps.Brushes.IdealForeground}"
                                        Margin="8,0,8,8" 
                                    FontSize="13"
                                        VerticalAlignment="Bottom"
                                        HorizontalAlignment="Right"/>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <mah:RangeSlider 
                            Grid.Column="1"
                            mah:SliderHelper.EnableMouseWheel="None"
                            AutoToolTipPlacement="TopLeft"
                            LowerValue="{Binding Temperature.Minimum.Value, Mode=OneWay}"
                            UpperValue="{Binding Temperature.Maximum.Value, Mode=OneWay}" 
                            Width="14"
                            Minimum="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.WeatherViewModel.NormalizedMinimumTemp, Mode=OneWay}"
                            Maximum="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.WeatherViewModel.NormalizedMaximumTemp, Mode=OneWay}"
                            Style="{StaticResource MahApps.Styles.RangeSlider.Flat}"
                            HorizontalAlignment="Right"
                            Orientation="Vertical"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type model:ForecastSummary}">
                <DataTemplate.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:.5" To="1" From="0" Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </DataTemplate.Triggers>
                <Grid Background="{StaticResource softerFadeBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border VerticalAlignment="Top" Background="{DynamicResource MahApps.Brushes.AccentBase}">
                        <TextBlock Margin="4,0,4,2" FontSize="20" TextWrapping="Wrap" 
                                   HorizontalAlignment="Center"
                               Foreground="{DynamicResource MahApps.Brushes.IdealForeground}" 
                               Style="{DynamicResource MahApps.Styles.TextBlock.HamburgerMenuHeader}"
                               Text="Forecast"/>
                    </Border>
                    <TextBlock Grid.Row="1" Margin="6,4,6,8" Style="{DynamicResource MahApps.Styles.TextBlock}"
                           FontStyle="Normal"
                           VerticalAlignment="Bottom"
                           FontSize="13"
                           Foreground="{DynamicResource MahApps.Brushes.IdealForeground}" 
                           Text="{Binding Text, Mode=OneWay}"
                           TextWrapping="Wrap"/>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>
    </Page.Resources>
    <Page.Background>
        <LinearGradientBrush ColorInterpolationMode="SRgbLinearInterpolation" StartPoint="1,0" EndPoint="0,1">
            <GradientStop Color="{DynamicResource MahApps.Colors.Accent4}" />
            <GradientStop Offset="1"/>
        </LinearGradientBrush>
    </Page.Background>
    <Page.Style>
        <Style TargetType="{x:Type Page}" BasedOn="{StaticResource pageStyle}" />
    </Page.Style>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Background="{DynamicResource MahApps.Brushes.AccentBase}">
            <WrapPanel Margin="0,0,8,8">
                <Button 
                VerticalAlignment="Top" 
                HorizontalAlignment="Left" 
                BorderThickness="1" Margin="8,8,0,0" Padding="4,4" 
                ToolTip="Visit https://www.accuweather.com/"
                Command="{Binding NavigationViewModel.NavigateToSite, Mode=OneWay}"
                CommandParameter="https://www.accuweather.com/"
                Style="{DynamicResource MahApps.Styles.Button}" >
                    <WrapPanel Orientation="Horizontal">
                        <TextBlock 
                        FontWeight="SemiBold" 
                        TextWrapping="Wrap" 
                        Text="Weather API&#10;provided by: " 
                        Margin="8,0"
                        FontSize="14"/>

                        <Border VerticalAlignment="Stretch"  Padding="4,0" CornerRadius="4">
                            <Border.Background>
                                <SolidColorBrush Opacity=".75" Color="#ddffffff" />
                            </Border.Background>
                            <Viewbox MaxWidth="128">

                                <Image Source="/Assets/AccuWeather.png" 
                                           RenderOptions.BitmapScalingMode="HighQuality"
                                           HorizontalAlignment="Left"/>
                            </Viewbox>
                        </Border>
                    </WrapPanel>
                </Button>
                <WrapPanel Orientation="Horizontal" Margin="0,0">
                    <TextBox MinHeight="48"
                    PreviewKeyDown="TextBox_PreviewKeyDown"
                    VerticalContentAlignment="Center" FontSize="15" FontWeight="SemiBold" Padding="8,0"
                    Validation.ErrorTemplate="{StaticResource textBoxErrorTemplateAdornRight}">
                        <TextBox.Text>
                            <Binding Path="LocationSearchText"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnNotifyDataErrors="True"
                                 ValidatesOnDataErrors="True"
                                 NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <validators:TextQueryValidator ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource MahApps.Styles.TextBox}" TargetType="{x:Type TextBox}">
                                <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True" />
                                <Setter Property="Margin" Value="8,8,0,0"/>
                                <Setter Property="MinWidth" Value="160"/>
                                <Style.Triggers>
                                    <Trigger Property="mah:TextBoxHelper.HasText" Value="False">
                                        <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="False" />
                                        <Setter Property="mah:TextBoxHelper.Watermark" Value="Enter a Location ..." />
                                    </Trigger>
                                    <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                                        <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True" />
                                    </Trigger>
                                    <Trigger Property="Validation.HasError"
                                                     Value="True">
                                        <Setter Property="Margin"
                                                        Value="8,8,24,0" />
                                        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Validation5}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <WrapPanel Orientation="Horizontal" Margin="0,8,0,0">
                        <mah:SplitButton Margin="8,0,8,0"
                                     
                    MinHeight="48"
                            HorizontalContentAlignment="Left"
                            DisplayMemberPath="Name">
                            <mah:SplitButton.Icon>
                                <iconPacks:PackIconMaterial Margin="2" Kind="StarOutline" Width="24" Height="24"/>
                            </mah:SplitButton.Icon>
                        </mah:SplitButton>
                        <Button >
                            <iconPacks:PackIconBootstrapIcons Kind="PinMap" Height="28" Width="28" VerticalAlignment="Center" />
                        </Button>
                    </WrapPanel>
                </WrapPanel>
            </WrapPanel>
        </Border>

        <Border Height="10" Grid.Row="1" VerticalAlignment="Top" Panel.ZIndex="1" IsHitTestVisible="False" options:Freeze="True">
            <Border.Background>
                <LinearGradientBrush EndPoint="0,1">
                    <GradientStop Color="#00000000" Offset="1"/>
                    <GradientStop Color="#33000000" Offset="0"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>

        <ScrollViewer Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Padding="0">
            <WrapPanel Orientation="Horizontal" Grid.Row="1">
                <WrapPanel.Style>
                    <Style TargetType="{x:Type WrapPanel}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WeatherViewModel.HasOtherResult, Mode=OneWay}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </WrapPanel.Style>
                <Grid 
                Margin="8,8,0,0">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding WeatherViewModel.CurrentConditions, Mode=OneWay, Converter={StaticResource NullnessConverter}}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:.5" To="1" From="0" Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Border Background="{DynamicResource MahApps.Brushes.AccentBase}"  VerticalAlignment="Top" HorizontalAlignment="Left" x:Name="currentConditions">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource SmallBorderTileStyle}" x:Key="gridBorderTile">
                                    <Setter Property="Padding" Value="8,4"/>
                                </Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource gridBorderTile}"/>
                                <Style TargetType="{x:Type WrapPanel}">
                                    <Setter Property="Orientation" Value="Horizontal"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                                <Style TargetType="{x:Type TextBlock}" x:Key="counterText">
                                    <Setter Property="FontSize" Value="28" />
                                    <Setter Property="Margin" Value="4,4,4,0"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                    <Setter Property="LineHeight" Value="28"/>
                                    <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                                </Style>
                                <Style TargetType="iconPacks:PackIconWeatherIcons">
                                    <Setter Property="Height" Value="24"/>
                                    <Setter Property="Width" Value="24"/>
                                    <Setter Property="Margin" Value="0,4,4,0"/>
                                    <Setter Property="Opacity" Value="1"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                                </Style>
                                <Style TargetType="{x:Type TextBlock}" x:Key="titleTextBlock">
                                    <Setter Property="FontSize" Value="16" />
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                    <Setter Property="LineHeight" Value="18"/>
                                    <Setter Property="Grid.Row" Value="1"/>
                                    <Setter Property="Margin" Value="4,2"/>
                                    <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
                                    <Setter Property="Opacity" Value=".9"/>
                                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                                </Style>
                            </Grid.Resources>
                            <Border Width="auto" Height="auto" MinWidth="0" MinHeight="0" Padding="8,4">
                                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock
                               Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}"
                               FontSize="24"
                               Padding="0,0,8,0"
                                TextWrapping="Wrap"
                               Foreground="{DynamicResource MahApps.Brushes.IdealForeground}">
                                <Run Text="{Binding WeatherViewModel.Location.LocalizedName, Mode=OneWay}"/><Run Text=","/>
                                <Run>
                                    <Run.Style>
                                        <Style TargetType="{x:Type Run}">
                                            <Setter Property="Text" Value="{Binding WeatherViewModel.Location.Country.ID, Mode=OneWay}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding WeatherViewModel.Location.Country.ID, Mode=OneWay}" Value="US">
                                                    <Setter Property="Text" Value="{Binding WeatherViewModel.Location.AdministrativeArea.ID, Mode=OneWay}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Run.Style>
                                </Run>
                                    </TextBlock>

                                    <TextBlock 
                                Margin="0,0,8,0"
                                Padding="0,0,8,0"
                                Text="{Binding WeatherViewModel.CurrentConditions.LocalObservationDateTime, Mode=OneWay}"
                                Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}"
                                FontSize="16"
                                FontWeight="Normal"
                                TextWrapping="Wrap"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Foreground="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                                </WrapPanel>
                            </Border>
                            <WrapPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Grid.Row="1" Background="{DynamicResource MahApps.Brushes.AccentBase}">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}"/>
                                    </Grid.Resources>
                                    <Border 
                                Grid.RowSpan="2"
                                Grid.Row="0" 
                                Grid.ColumnSpan="2"
                                        MinHeight="128"
                                Background="{DynamicResource softFadeBrush}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="{Binding WeatherViewModel.CurrentConditions.WeatherIcon, Mode=OneWay, Converter={StaticResource AccuWeatherIconToWeatherIconConverter}}" Width="64" Height="64" Margin="0,4,8,0"/>
                                                <TextBlock Text="{Binding WeatherViewModel.CurrentConditions.WeatherText, Mode=OneWay}" FontSize="24"/>
                                            </WrapPanel>
                                            <TextBlock Text="Current Conditions" Style="{StaticResource titleTextBlock}"/>
                                        </Grid>
                                    </Border>
                                    <Border Background="#11000000"  Grid.RowSpan="2" Grid.Row="2">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="Thermometer" Width="32" Height="64"/>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}">
                                                            <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Temperature.Imperial.Value, StringFormat='{}{0}°'}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                    <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Temperature.Metric.Value, StringFormat='{}{0}°'}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </WrapPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleTextBlock}">
                                                        <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Temperature.Imperial.Unit, StringFormat='{}Temp. ({0})'}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Temperature.Metric.Unit, StringFormat='{}Temp. ({0})'}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <Border Background="#33000000" Grid.Column="3" Grid.RowSpan="2" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="Windy" Width="32" Height="32" />
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}">
                                                            <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Wind.Speed.Imperial.Value, Mode=OneWay}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                    <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Wind.Speed.Metric.Value, Mode=OneWay}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </WrapPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleTextBlock}">
                                                        <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Wind.Speed.Imperial.Unit, Mode=OneWay, StringFormat='{}Wind Speed ({0})'}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Wind.Speed.Metric.Unit, Mode=OneWay, StringFormat='{}Wind Speed ({0})'}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <Border Background="#22000000" Grid.Column="3" Grid.RowSpan="2" Grid.Row="2" >
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="WindDeg" RenderTransformOrigin=".5,.5">
                                                    <iconPacks:PackIconWeatherIcons.RenderTransform>
                                                        <RotateTransform Angle="{Binding WeatherViewModel.CurrentConditions.Wind.Direction.Degrees, Mode=OneWay}" />
                                                    </iconPacks:PackIconWeatherIcons.RenderTransform>
                                                </iconPacks:PackIconWeatherIcons>
                                                <TextBlock Text="{Binding WeatherViewModel.CurrentConditions.Wind.Direction.Degrees, Mode=OneWay, StringFormat='{}{0}°'}"/>
                                            </WrapPanel>
                                            <TextBlock Text="{Binding WeatherViewModel.CurrentConditions.Wind.Direction.English, Mode=OneWay, StringFormat='{}Wind Dir. ({0})'}" Style="{StaticResource titleTextBlock}"/>
                                        </Grid>
                                    </Border>
                                    <Border Background="#44000000" Grid.Column="1" Grid.Row="2">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="DaySunny" />
                                                <TextBlock Text="{Binding WeatherViewModel.CurrentConditions.UVIndex, Mode=OneWay}"/>
                                            </WrapPanel>
                                            <TextBlock Text="UV Index" Style="{StaticResource titleTextBlock}"/>
                                        </Grid>
                                    </Border>
                                    <Border Background="#33000000" Grid.Column="1" Grid.Row="3">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="Humidity" />
                                                <TextBlock Text="{Binding WeatherViewModel.CurrentConditions.RelativeHumidity, Mode=OneWay}"/>
                                            </WrapPanel>
                                            <TextBlock Text="Rel. Humidity" Style="{StaticResource titleTextBlock}"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.Resources>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}"/>
                                    </Grid.Resources>
                                    <Border 
                                        Grid.RowSpan="2"
                                        Grid.Row="2" 
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Padding="0"
                                        MinHeight="128"
                                        VerticalAlignment="Stretch"
                                        Background="{DynamicResource MahApps.Brushes.AccentBase}">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource gridBorderTile}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid IsHitTestVisible="False">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.Resources>
                                                    <Style TargetType="{x:Type Slider}" BasedOn="{StaticResource MahApps.Styles.Slider.Flat}">
                                                        <Setter Property="Orientation" Value="Vertical"/>
                                                        <Setter Property="Minimum" Value="0"/>
                                                        <Setter Property="TickFrequency" Value="1" />
                                                        <Setter Property="Maximum" Value="3"/>
                                                        <Setter Property="BorderBrush">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.IdealForeground}" Opacity=".6"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="FontSize" Value="14"/>
                                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                                        <Setter Property="Grid.Row" Value="1"/>
                                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                                        <Setter Property="Opacity" Value=".9"/>
                                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}"/>
                                                    </Style>
                                                </Grid.Resources>
                                                <Slider Value="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.PastHour.Imperial.Value, Mode=OneWay}" 
                                                    Background="#11000000" Foreground="#11000000"/>
                                                <Slider Value="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.Past3Hours.Imperial.Value, Mode=OneWay}" Grid.Column="1" Background="#22000000" Foreground="#22000000"/>
                                                <Slider Value="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.Past6Hours.Imperial.Value, Mode=OneWay}" Grid.Column="2" Background="#33000000" Foreground="#33000000"/>
                                                <Slider Value="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.Past9Hours.Imperial.Value, Mode=OneWay}" Grid.Column="3" Background="#44000000" Foreground="#44000000"/>
                                                <Slider Value="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.Past12Hours.Imperial.Value, Mode=OneWay}" Grid.Column="4" Background="#55000000" Foreground="#55000000"/>
                                                <Slider Value="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.Past18Hours.Imperial.Value, Mode=OneWay}" Grid.Column="5" Background="#66000000" Foreground="#66000000"/>
                                                <Slider Value="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.Past24Hours.Imperial.Value, Mode=OneWay}" Grid.Column="6" Background="#77000000" Foreground="#77000000"/>
                                                <UniformGrid Grid.Column="7" Rows="4" Columns="1" Width="8" Background="#88000000">
                                                    <UniformGrid.Resources>
                                                        <Style TargetType="{x:Type Rectangle}">
                                                            <Setter Property="Fill" Value="{StaticResource sliderThumbBrush}"/>
                                                            <Setter Property="Height" Value="4"/>
                                                            <Setter Property="VerticalAlignment" Value="Bottom"/>
                                                        </Style>
                                                    </UniformGrid.Resources>
                                                    <Rectangle />
                                                    <Rectangle />
                                                    <Rectangle />
                                                    <Rectangle />
                                                </UniformGrid>
                                                <!--<ItemsControl ItemsSource="{Binding WeatherViewModel.PrecipSummaryList, Mode=OneWay}" 
                                                     Grid.Column="7" Width="8" Background="#88000000"  BorderThickness="0">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Rows="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=Items.Count}" Columns="1"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Rectangle>
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Fill" Value="{StaticResource sliderThumbBrush}"/>
                                                                    <Setter Property="Height" Value="2"/>
                                                                    <Setter Property="Width" Value="Auto"/>
                                                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>-->
                                                <Border Grid.ColumnSpan="8" Grid.Row="1" MinHeight="0" Height="AUto" Background="#22000000"/>
                                                <TextBlock Text="1" />
                                                <TextBlock Text="3" Grid.Column="1"/>
                                                <TextBlock Text="6" Grid.Column="2"/>
                                                <TextBlock Text="9" Grid.Column="3"/>
                                                <TextBlock Text="12" Grid.Column="4"/>
                                                <TextBlock Text="18" Grid.Column="5"/>
                                                <TextBlock Text="24" Grid.Column="6"/>
                                            </Grid>
                                            <TextBlock Text="{Binding WeatherViewModel.CurrentConditions.PrecipitationSummary.PastHour.Imperial.Unit, Mode=OneWay, StringFormat='{}Past Precip. Summary ({0})'}" Style="{StaticResource titleTextBlock}" Margin="12,8"/>
                                        </Grid>
                                    </Border>
                                    <Border Background="#11000000" Grid.Column="1" Grid.RowSpan="2" Grid.Row="0">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="HorizonAlt" Width="32" Height="64"/>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}">
                                                            <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Visibility.Imperial.Value, Mode=OneWay}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                    <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Visibility.Metric.Value, Mode=OneWay}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </WrapPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleTextBlock}">
                                                        <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Visibility.Imperial.Unit, StringFormat='{}Visibility ({0})'}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Visibility.Metric.Unit, StringFormat='{}Visibility ({0})'}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <Border Background="#33000000" Grid.Column="3" Grid.RowSpan="2" >
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource gridBorderTile}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WeatherViewModel.CurrentConditions.Pressure}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="Barometer" Width="24" Height="24" />
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}">
                                                            <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Pressure.Imperial.Value, Mode=OneWay}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                    <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Pressure.Metric.Value, Mode=OneWay}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </WrapPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleTextBlock}">
                                                        <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Pressure.Imperial.Unit, StringFormat='{}Pressure ({0})'}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.Pressure.Metric.Unit, StringFormat='{}Pressure ({0})'}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <Border Background="#22000000" Grid.Column="3" Grid.RowSpan="2" Grid.Row="2" >
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}"  BasedOn="{StaticResource gridBorderTile}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WeatherViewModel.CurrentConditions.WindChillTemperature}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="StrongWind"/>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}">
                                                            <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.WindChillTemperature.Imperial.Value, Mode=OneWay, StringFormat='{}{0}°'}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                    <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.WindChillTemperature.Metric.Value, Mode=OneWay, StringFormat='{}{0}°'}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </WrapPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleTextBlock}">
                                                        <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.WindChillTemperature.Imperial.Unit, StringFormat='{}Wind Chill ({0})'}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.WindChillTemperature.Metric.Unit, StringFormat='{}Wind Chill ({0})'}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                    <Border Background="#44000000" Grid.Column="0" Grid.RowSpan="1" Grid.Row="1">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="Cloudy" />
                                                <TextBlock Text="{Binding WeatherViewModel.CurrentConditions.CloudCover, Mode=OneWay, StringFormat='{}{0}%'}"/>
                                            </WrapPanel>
                                            <TextBlock Text="Cloud Cover" Style="{StaticResource titleTextBlock}"/>
                                        </Grid>
                                    </Border>
                                    <Border Background="#55000000" Grid.Column="0" Grid.Row="0">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <WrapPanel>
                                                <iconPacks:PackIconWeatherIcons Kind="Raindrop" />
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource counterText}">
                                                            <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.DewPoint.Imperial.Value, Mode=OneWay, StringFormat='{}{0}°'}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                    <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.DewPoint.Metric.Value, Mode=OneWay, StringFormat='{}{0}°'}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </WrapPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource titleTextBlock}">
                                                        <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.DewPoint.Imperial.Unit, StringFormat='{}Dew Point ({0})'}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding WeatherViewModel.Units, Mode=OneWay}" Value="{x:Static viewModel:UnitType.Metric}">
                                                                <Setter Property="Text" Value="{Binding WeatherViewModel.CurrentConditions.DewPoint.Metric.Unit, StringFormat='{}Dew Point ({0})'}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </WrapPanel>
                        </Grid>
                    </Border>

                    <Border Width="{Binding ElementName=currentConditions, Path=ActualWidth}"
                        Height="{Binding ElementName=currentConditions, Path=ActualHeight}"
                        Background="#66000000" Panel.ZIndex="-1" Margin="0,0,-4,-4" IsHitTestVisible="False" IsEnabled="False">
                        <Border.Effect>
                            <BlurEffect Radius="8" />
                        </Border.Effect>
                    </Border>
                </Grid>

                <Grid Margin="5,5,8,8">
                    <ListBox 
                        HorizontalAlignment="Stretch" 
                        IsHitTestVisible="False"
                        IsEnabled="False"
                        Margin="0"
                         VerticalAlignment="Top" 
                         Background="Transparent" 
                         ItemsSource="{Binding WeatherViewModel.DailyForecastCollectionView, Mode=OneWay}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.Style>
                            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource MahApps.Styles.ListBox}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WeatherViewModel.Forecast, Mode=OneWay}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DataTemplate.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:.5" To="1" From="0" Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource forecastListBoxItem}">
                                <Setter Property="Background" Value="#66000000"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="8"  />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                    <ListBox 
                     HorizontalAlignment="Stretch" 
                        IsHitTestVisible="False"
                     VerticalAlignment="Top" 
                     Background="Transparent" 
                        BorderThickness="0"
                     ItemsSource="{Binding WeatherViewModel.DailyForecastCollectionView, Mode=OneWay}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.Style>
                            <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource MahApps.Styles.ListBox}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WeatherViewModel.Forecast, Mode=OneWay}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.Style>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource forecastListBoxItem}"/>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </WrapPanel>
        </ScrollViewer>

        <DockPanel Grid.Row="1" 
                   
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Margin="8,0,8,8" 
                Opacity=".6">
            <DockPanel.Style>
                <Style TargetType="{x:Type DockPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WeatherViewModel.HasOtherResult, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Style>
            <iconPacks:PackIconMaterial Height="24" Width="24" Margin="0,0,8,0" VerticalAlignment="Center">
                <iconPacks:PackIconMaterial.Style>
                    <Style TargetType="iconPacks:PackIconMaterial">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WeatherViewModel.ServiceResult.Type, Mode=OneWay}" Value="{x:Static viewModel:ServiceResultType.Information}">
                                <Setter Property="Kind" Value="Information"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WeatherViewModel.ServiceResult.Type, Mode=OneWay}" Value="{x:Static viewModel:ServiceResultType.Error}">
                                <Setter Property="Kind" Value="Alert"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </iconPacks:PackIconMaterial.Style>
            </iconPacks:PackIconMaterial>
            <TextBlock 
                FontSize="24"
                Margin="0,0,0,0"
                TextWrapping="Wrap"
                Text="{Binding WeatherViewModel.ServiceResult.Text, Mode=OneWay, FallbackValue=''}"
                Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}"/>
        </DockPanel>

        <DockPanel Grid.Row="1" 
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Margin="8,0,8,8" 
                Opacity=".6">
            <DockPanel.Style>
                <Style TargetType="{x:Type DockPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ApiKey, Mode=OneWay}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Style>

            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                <TextBlock Text="Welcome!" HorizontalAlignment="Center" Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}"
                   FontSize="64" FontFamily="Calibri"/>
                <iconPacks:PackIconMaterial Kind="HumanGreeting" Height="64" Width="64" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </StackPanel>
            <TextBlock DockPanel.Dock="Bottom" FontSize="20" Style="{DynamicResource MahApps.Styles.TextBlock}" Text="To get started, enter an API Key on the Settings page." />
        </DockPanel>

        <DockPanel Grid.Row="1" 
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Margin="8,0,8,8" 
                Opacity=".6">
            <DockPanel.Style>
                <Style TargetType="{x:Type DockPanel}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <!--<DataTrigger Binding="{Binding ApiKey, Mode=OneWay}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ApiKey, Mode=OneWay, Converter={StaticResource StringIsEmptyConverter}}" Value="False"/>
                                <Condition Binding="{Binding WeatherViewModel.ServiceResult, Mode=OneWay}" Value="{x:Null}"/>
                                <Condition Binding="{Binding WeatherViewModel.Location, Mode=OneWay}" Value="{x:Null}"/>
                                <Condition Binding="{Binding WeatherViewModel.SearchInProgress, Mode=OneWay}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Style>

            <DockPanel DockPanel.Dock="Top" HorizontalAlignment="Center">
                <TextBlock Text="New Search" HorizontalAlignment="Center" Style="{StaticResource MahApps.Styles.TextBlock.HamburgerMenuHeader}" TextWrapping="Wrap"
                   FontSize="64" FontFamily="Calibri" Margin="0,0,8,0"/>
                <iconPacks:PackIconMaterial Kind="CloudSearch" Height="64" Width="64" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </DockPanel>
            <TextBlock DockPanel.Dock="Bottom" FontSize="20" Style="{DynamicResource MahApps.Styles.TextBlock}" Text="To get started, enter a search term above." TextWrapping="Wrap" />
        </DockPanel>

        <mah:ProgressRing VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" Height="128" Width="128"
                          IsActive="{Binding WeatherViewModel.SearchInProgress, Mode=OneWay}"/>
    </Grid>
</Page>
